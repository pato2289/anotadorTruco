{"version":3,"sources":["components/Header.js","components/Puntajes.js","components/Jugadores.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Puntajes","contadorNosotros","contadorEllos","Jugadores","props","incrementarNosotros","decrementarNosotros","incrementarEllos","decrementarEllos","onClick","App","useState","setContadorNosotros","setContadorEllos","localStorage","setItem","useEffect","persistenciaContadorNosotros","getItem","persistenciaContadorEllos","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a18e0300.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return ( \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\"></div>\n                <div className=\"col-wd-auto\">\n                    <h1 className=\"text-center header\">Anotador Truco</h1>\n                </div>\n                <div className=\"col\"></div>\n            </div>\n        </div>\n     );\n}\n \nexport default Header;","import React from 'react';\n\nconst Puntajes = ({contadorNosotros, contadorEllos}) => {\n\n    return ( \n        <div className=\"container puntajes\">\n            <div className=\"row\">\n                <div className=\"col-12 puntaje\">\n                    <h1 className=\"text-center\">Puntaje</h1>\n                    <div className=\"row text-center\">\n                        <div className=\"col-sm-6\">\n                            <h3>Nosotros</h3>\n                            <p className=\"contador\">{contadorNosotros}</p>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <h3>Ellos</h3>\n                            <p className=\"contador\">{contadorEllos}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12 puntaje\">\n                    <h1 className=\"text-center\">Para ganar</h1>\n                    <div className=\"row text-center\">\n                        <div className=\"col-sm-6\">\n                            <h3>Nosotros</h3>\n                            <p className=\"contador\">{30 - contadorNosotros}</p>\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <h3>Ellos</h3>\n                            <p className=\"contador\">{30 - contadorEllos}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default Puntajes;","import React, { useState, useEffect } from 'react';\n\nconst Jugadores = (props) => {\n\n    const { incrementarNosotros, decrementarNosotros,\n            incrementarEllos, decrementarEllos,\n            contadorNosotros, contadorEllos        \n    } = props;\n\n    const ganadorParcial = () => {\n        if(contadorNosotros > contadorEllos){\n            return \"Nosotros\"\n        } else if (contadorNosotros < contadorEllos) {\n            return \"Ellos\"\n        } else {\n            return \"Empate\"\n        }\n    }\n\n    const diferenciaDePuntos = () => {\n        if(contadorNosotros > contadorEllos){\n            return contadorNosotros - contadorEllos\n        } else if (contadorNosotros < contadorEllos) {\n            return contadorEllos - contadorNosotros\n        } else {\n            return 0\n        }\n    }\n\n\n    return (\n        <div> \n        <div className=\"container jugadores\">\n            <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <h2 className=\"text-center\">Nosotros</h2>\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <button \n                                className=\"btn btn-success btn-block\"\n                                onClick={incrementarNosotros}\n                                >+\n                            </button>\n                        </div>\n                        <div className=\"col-6\">\n                            <button \n                                className=\"btn btn-danger btn-block\"\n                                onClick={decrementarNosotros}\n                                >-\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-6\">\n                    <h2 className=\"text-center\">Ellos</h2>\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <button \n                                className=\"btn btn-success btn-block\"\n                                onClick={incrementarEllos}\n                                >+\n                            </button>\n                        </div>\n                        <div className=\"col-6\">\n                            <button \n                                className=\"btn btn-danger btn-block\"\n                                onClick={decrementarEllos}\n                                >-\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n            <div className=\"container info\">\n            <div className=\"row\">\n                <div className=\"col-lg-12\">\n                    <p>Ganando: {ganadorParcial()}</p>\n                    <p>Diferencia de puntos: {diferenciaDePuntos()}</p>\n                </div>\n            </div>\n        </div>\n        </div>\n\n     );\n}\n \nexport default Jugadores;","import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nimport Header from './components/Header'\nimport Puntajes from './components/Puntajes'\nimport Jugadores from './components/Jugadores'\n\nfunction App() {\n\n  const[contadorNosotros, setContadorNosotros] = useState(0);\n  const[contadorEllos, setContadorEllos] = useState(0);\n\n  localStorage.setItem(\"puntajeNosotros\", contadorNosotros);\n  localStorage.setItem(\"puntajeEllos\", contadorEllos);\n\n  useEffect(() => {\n    const persistenciaContadorNosotros = localStorage.getItem('puntajeNosotros');\n    const persistenciaContadorEllos = localStorage.getItem('puntajeEllos');\n\n    if(persistenciaContadorNosotros) {\n      setContadorNosotros(persistenciaContadorNosotros)\n    }\n\n    if(persistenciaContadorEllos) {\n      setContadorEllos(persistenciaContadorEllos)\n    }\n\n  }, [])\n\n\n  const incrementarNosotros = () => {\n        if(contadorNosotros < 30 && contadorNosotros >= 0){\n          setContadorNosotros(parseInt(contadorNosotros) + 1);\n        }\n    }\n\n    const decrementarNosotros = () => {\n      if(contadorNosotros <= 30 && contadorNosotros > 0){\n        setContadorNosotros(parseInt(contadorNosotros) - 1);\n      }\n  }\n\n\n  const incrementarEllos = () => {\n    if(contadorEllos < 30 && contadorEllos >= 0){\n      setContadorEllos(parseInt(contadorEllos) + 1);\n    }\n}\n\nconst decrementarEllos = () => {\n  if(contadorEllos <= 30 && contadorEllos > 0){\n    setContadorEllos(parseInt(contadorEllos) - 1);\n  }\n}\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-12\">\n          <Header/>\n        </div>\n      </div>\n        \n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <Jugadores \n            incrementarNosotros={incrementarNosotros}\n            decrementarNosotros={decrementarNosotros}\n            incrementarEllos={incrementarEllos}\n            decrementarEllos={decrementarEllos}\n            contadorNosotros={contadorNosotros}\n            contadorEllos={contadorEllos}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <Puntajes\n            contadorNosotros={contadorNosotros}\n            contadorEllos={contadorEllos} \n          />\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}